{"mappings":"gfAAA,IAOIA,EAPJC,EAAAC,EAAA,SAEMC,EAAYC,SAASC,cAAc,oBACnCC,EAAWF,SAASC,cAAc,gBAElCE,EADYH,SAASC,cAAc,UACXG,iBAAiB,UAI/CF,EAASG,UAAW,EAEpB,IAAMC,EAAU,CACZC,YAAY,EACZC,WAAW,EACXC,YAAa,IAAIC,KACjBC,gBAAiB,EACjBC,QAAA,SAAQC,GACNH,KAAKI,MAAMD,GAAiBH,KAAKI,MAAM,IAAIJ,OAAW,EAAIb,EAAAkB,OAAOC,QAAQ,sCAAwCd,EAASG,UAAW,C,GAqB3I,SAASY,IACP,IAhBiBC,EAGTC,EACAC,EACAC,EAWJC,GAhBaJ,EAgBQR,KAAKI,MAAMf,EAAUwB,OAASb,KAAKI,MAAM,IAAIJ,MAb9DS,EAASK,IAETH,EAAa,IADbD,EAAOD,MAQN,CAAEM,KALIC,KAAKC,MAAMT,EAAKG,GAKdO,MAJDF,KAAKC,MAAMT,EAAMG,EAAOD,GAIhBS,QAHNH,KAAKC,MAAMT,EAAOG,EAAOD,EAAQD,GAGlBW,QAFfJ,KAAKC,MAAMT,EAAQG,EAAOD,EAAQD,EARnC,OAwBjBhB,EAAY4B,SAAQ,SAACC,EAAOC,GAR5B,IAAiBC,EASfF,EAAMG,aATSD,EASaE,OAAOC,OAAOf,GAAUW,KAR1C,EACC,IAAMC,EAENA,EAORE,OAAOC,OAAOf,GAAUW,GAAK,IAC9BD,EAAMG,YAAc,KACpBG,cAAc1C,GACdM,EAASiC,YAAc,QACvBjC,EAASG,UAAW,E,IAnC1BkC,UAAUxC,EAAWO,GAwCrBJ,EAASsC,iBAAiB,SAAS,WACJ,UAAzBtC,EAASiC,aACXlB,IACArB,EAAa6C,YAAYxB,EAAa,KAEtCf,EAASiC,YAAc,SAEvBG,cAAc1C,GACdM,EAASiC,YAAc,QACvBjC,EAASG,UAAW,EACpBF,EAAY4B,SAAQ,SAAAC,G,OAASA,EAAMG,YAAc,I","sources":["src/js/02-timer.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst dateInput = document.querySelector('#datetime-picker'),\n      startBtn = document.querySelector('[data-start]'), \n      timerWrap = document.querySelector('.timer'),\n      labelsValue = timerWrap.querySelectorAll('.value');\n\nlet startTimer;\n\nstartBtn.disabled = true;\n\nconst options = {\n    enableTime: true,\n    time_24hr: true,\n    defaultDate: new Date(),\n    minuteIncrement: 1,\n    onClose(selectedDates) {\n      Date.parse(selectedDates) - Date.parse(new Date()) <= 0 ? Notify.failure('Please choose a date in the future') : startBtn.disabled = false;\n    },\n  };\n\nflatpickr(dateInput, options);\n\nfunction convertMs(ms) {\n\n    const second = 1000;\n    const minute = second * 60;\n    const hour = minute * 60;\n    const day = hour * 24;\n  \n    const days = Math.floor(ms / day);\n    const hours = Math.floor((ms % day) / hour);\n    const minutes = Math.floor(((ms % day) % hour) / minute);\n    const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n  \n    return { days, hours, minutes, seconds };\n  }\n\nfunction clockUpdate() { \n  let timerObj = convertMs(Date.parse(dateInput.value) - Date.parse(new Date()));\n\n  function addZero(num) {\n    if(num <= 9) {\n        return '0' + num;\n    } else {\n        return num;\n    }\n}\n\n  labelsValue.forEach((label, i) => {\n    label.textContent = addZero(Object.values(timerObj)[i])\n\n    if(Object.values(timerObj)[i] < 0) {\n      label.textContent = '00'\n      clearInterval(startTimer)\n      startBtn.textContent = 'Start';\n      startBtn.disabled = true;\n    }\n  })\n}\n\nstartBtn.addEventListener('click', () => {\n  if (startBtn.textContent === 'Start') {\n    clockUpdate();\n    startTimer = setInterval(clockUpdate, 1000);\n    startTimer;\n    startBtn.textContent = 'Stop';\n  } else {\n    clearInterval(startTimer);\n    startBtn.textContent = 'Start';\n    startBtn.disabled = true;\n    labelsValue.forEach(label => label.textContent = '00')\n  }\n  \n})\n\n"],"names":["$84b9dae4df53835d$var$startTimer","$h6c0i","parcelRequire","$84b9dae4df53835d$var$dateInput","document","querySelector","$84b9dae4df53835d$var$startBtn","$84b9dae4df53835d$var$labelsValue","querySelectorAll","disabled","$84b9dae4df53835d$var$options","enableTime","time_24hr","defaultDate","Date","minuteIncrement","onClose","selectedDates","parse","Notify","failure","$84b9dae4df53835d$var$clockUpdate","ms","minute","hour","day","timerObj","value","second","days","Math","floor","hours","minutes","seconds","forEach","label","i","num","textContent","Object","values","clearInterval","flatpickr","addEventListener","setInterval"],"version":3,"file":"02-timer.f1beaefa.js.map"}