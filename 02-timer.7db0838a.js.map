{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAYC,SAASC,cAAc,oBACnCC,EAAWF,SAASC,cAAc,gBAElCE,EADYH,SAASC,cAAc,UACXG,iBAAiB,UAE/C,IAAIC,EAEJH,EAASI,UAAW,EAEpB,MAAMC,EAAU,CACZC,YAAY,EACZC,WAAW,EACXC,YAAa,IAAIC,KACjBC,gBAAiB,EACjBC,QAAQC,GACNH,KAAKI,MAAMD,GAAiBH,KAAKI,MAAM,IAAIJ,OAAW,EAAId,EAAAmB,OAAOC,QAAQ,sCAAwCf,EAASI,UAAW,C,GAqB3I,SAASY,IACP,IAAIC,EAhBN,SAAmBC,GAEf,MACMC,EAASC,IACTC,EAAOF,KACPG,EAAa,GAAPD,EAOZ,MAAO,C,KALME,KAAKC,MAAMN,EAAKI,G,MACfC,KAAKC,MAAMN,EAAMI,EAAOD,G,QACtBE,KAAKC,MAAMN,EAAOI,EAAOD,EAAQF,G,QACjCI,KAAKC,MAAMN,EAAQI,EAAOD,EAAQF,EARnC,K,CAcFM,CAAUhB,KAAKI,MAAMhB,EAAU6B,OAASjB,KAAKI,MAAM,IAAIJ,OAEtER,EAAY0B,SAAQ,CAACC,EAAOC,IAAMD,EAAME,YAAcC,OAAOC,OAAOf,GAAUY,I,CApBhFI,UAAUpC,EAAWQ,GAuBrBL,EAASkC,iBAAiB,SAAS,KACJ,UAAzBlC,EAAS8B,aACXd,IACAb,EAAagC,YAAYnB,EAAa,KAEtChB,EAAS8B,YAAc,SAEvBM,cAAcjC,GACdH,EAAS8B,YAAc,QACvB9B,EAASI,UAAW,EACpBH,EAAY0B,SAAQC,GAASA,EAAME,YAAc,O","sources":["src/js/02-timer.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst dateInput = document.querySelector('#datetime-picker'),\n      startBtn = document.querySelector('[data-start]'), \n      timerWrap = document.querySelector('.timer'),\n      labelsValue = timerWrap.querySelectorAll('.value');\n\nlet startTimer;\n\nstartBtn.disabled = true;\n\nconst options = {\n    enableTime: true,\n    time_24hr: true,\n    defaultDate: new Date(),\n    minuteIncrement: 1,\n    onClose(selectedDates) {\n      Date.parse(selectedDates) - Date.parse(new Date()) <= 0 ? Notify.failure('Please choose a date in the future') : startBtn.disabled = false;\n    },\n  };\n\nflatpickr(dateInput, options);\n\nfunction convertMs(ms) {\n\n    const second = 1000;\n    const minute = second * 60;\n    const hour = minute * 60;\n    const day = hour * 24;\n  \n    const days = Math.floor(ms / day);\n    const hours = Math.floor((ms % day) / hour);\n    const minutes = Math.floor(((ms % day) % hour) / minute);\n    const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n  \n    return { days, hours, minutes, seconds };\n  }\n\nfunction clockUpdate() {\n  let timerObj = convertMs(Date.parse(dateInput.value) - Date.parse(new Date()));\n\n  labelsValue.forEach((label, i) => label.textContent = Object.values(timerObj)[i])\n}\n\nstartBtn.addEventListener('click', () => {\n  if (startBtn.textContent === 'Start') {\n    clockUpdate();\n    startTimer = setInterval(clockUpdate, 1000);\n    startTimer;\n    startBtn.textContent = 'Stop';\n  } else {\n    clearInterval(startTimer);\n    startBtn.textContent = 'Start';\n    startBtn.disabled = true;\n    labelsValue.forEach(label => label.textContent = '00')\n  }\n  \n})\n\n"],"names":["$iQIUW","parcelRequire","$40d383fb392a7037$var$dateInput","document","querySelector","$40d383fb392a7037$var$startBtn","$40d383fb392a7037$var$labelsValue","querySelectorAll","$40d383fb392a7037$var$startTimer","disabled","$40d383fb392a7037$var$options","enableTime","time_24hr","defaultDate","Date","minuteIncrement","onClose","selectedDates","parse","Notify","failure","$40d383fb392a7037$var$clockUpdate","timerObj","ms","minute","second","hour","day","Math","floor","$40d383fb392a7037$var$convertMs","value","forEach","label","i","textContent","Object","values","flatpickr","addEventListener","setInterval","clearInterval"],"version":3,"file":"02-timer.7db0838a.js.map"}